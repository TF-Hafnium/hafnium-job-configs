- job:
    name: hafnium-code-coverage-fvp
    project-type: freestyle
    defaults: global
    properties:
      - build-discarder:
          days-to-keep: 90
          num-to-keep: 90
    parameters:
        - string:
            name: FVP_MODEL_ARCHIVE_NAME
            default: 'FVP_Base_RevC-2xAEMvA_11.24_11_Linux64.tgz'
        - string:
            name: FVP_MODEL_URL
            default: 'https://developer.arm.com/-/media/Files/downloads/ecosystem-models'
        - string:
            name: HF_REFSPEC
            default: '+refs/heads/master:refs/remotes/origin/master'
        - bool:
            name: DEPLOY_HAFNIUM_AS_SPMC
            default: true
            description: "Run tests on Hafnium as SPMC."
        - string:
            name: ARGS_DEPLOY_SPMC
            default: --code-coverage
            trim: true
        - bool:
            name: DEPLOY_HAFNIUM_AS_HYP
            default: false
            description: "Run tests on Hafnium as NWd Hypervisor."
        - string:
            name: ARGS_DEPLOY_HYP
            default:
            trim: true
        - string:
            name: QA_REPO_PUBLIC
            default: https://git.gitlab.arm.com/tooling/qa-tools.git
            trim: true
        - string:
            name: QA_REFSPEC
            default: master
            trim: true
    disabled: false
    node: docker-amd64-hafnium-focal
    concurrent: true
    display-name: 'Hafnium Code Coverage (FVP)'
    scm:
        - git:
            url: https://review.trustedfirmware.org/hafnium/hafnium
            refspec: ${HF_REFSPEC}
            name: origin
            branches:
                - refs/heads/master
            choosing-strategy: gerrit
            skip-tag: true
            shallow-clone: true
            wipe-workspace: false
            submodule:
                recursive: true
    wrappers:
        - timestamps
        - timeout:
            timeout: 60
            fail: true
        - build-name:
            name: '#${BUILD_NUMBER}-${GIT_REVISION,length=8}'
    builders:
        - shell: |
            #!/bin/bash

            set -ex
            mkdir "${WORKSPACE}"/../fvp
            pushd "${WORKSPACE}"/../fvp
            wget -q "${FVP_MODEL_URL}/${FVP_MODEL_ARCHIVE_NAME}"
            tar xfz "${FVP_MODEL_ARCHIVE_NAME}"
            popd
            PATH=${WORKSPACE}/prebuilts/linux-x64/dtc:$PATH
            make PROJECT=reference ENABLE_ASSERTIONS=1
            if [ "${DEPLOY_HAFNIUM_AS_SPMC}" == "true" ]; then
              kokoro/test_spmc.sh ${ARGS_DEPLOY_SPMC}
            fi
            if [ "${DEPLOY_HAFNIUM_AS_HYP}" == "true" ]; then
              kokoro/test.sh ${ARGS_DEPLOY_HYP}
            fi
    triggers:
        - timed: '59 23 * * 6'
    publishers:
        - rich-text-publisher:
            parser-name: HTML
            stable-text: ${{FILE:report.html}}
        - archive:
            artifacts: 'out/**/kokoro_log/**/sponge_log.*, out/**/qa-code-coverage/**, report.html'
            allow-empty: true
        - junit:
            results: 'out/**/kokoro_log/**/sponge_log.xml'
